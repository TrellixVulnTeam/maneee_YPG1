"use strict";
var blobUtil = require('blob-util');
var loadImage = require('blueimp-load-image');
var defaultCompressOptions = {
    quality: 0.8,
    outputFormat: 'jpeg',
};
function compress(source, options) {
    var _options = Object.assign({}, defaultCompressOptions, options);
    return new Promise(function (resolve, reject) {
        if (_options.maxWidth !== undefined && _options.maxWidth <= 0) {
            throw new Error('options.maxWidth must be greater than zero');
        }
        if (_options.maxHeight !== undefined && _options.maxHeight <= 0) {
            throw new Error('options.maxHeight must be greater than zero');
        }
        if (_options.quality < 0 || _options.quality > 1) {
            throw new Error('options.quality must be between 0 and 1');
        }
        var callback = function (canvas) {
            var type = "image/" + _options.outputFormat;
            blobUtil.canvasToBlob(canvas, type, _options.quality).then(function (blob) {
                resolve(blob);
            });
        };
        var loadImageOptions = {
            canvas: true,
            maxWidth: _options.maxWidth,
            maxHeight: _options.maxHeight,
            orientation: true,
        };
        loadImage(source, callback, loadImageOptions);
    });
}
exports.compress = compress;
//# sourceMappingURL=index.js.map